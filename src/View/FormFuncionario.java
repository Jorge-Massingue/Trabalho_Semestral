/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.GeralDAO;
import static Controller.GeralDAO.listarFuncionarios;
import static Controller.GeralDAO.pesquisarFuncionarios;
import Controller.OutrasOperacoesDao;
import Model.Funcionarios;
import com.placeholder.PlaceHolder;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static metodos.StringToDate.*;
import metodos.Tabela;
//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Almerino Buce
 */
public class FormFuncionario extends javax.swing.JPanel {

    int cod;

    String genero, estado;
    Funcionarios func = new Funcionarios();
    GeralDAO<Funcionarios> dao = new GeralDAO<>();
    OutrasOperacoesDao o = new OutrasOperacoesDao();
    //  DateFormat = new SimpleDateFormat("");
    Tabela tabela = new Tabela();

    public void desabilitarCampos() {
        tfNome.setEnabled(false);
        tfBI.setEnabled(false);
        rbtnFeminino.setEnabled(false);
        rbtnMasculino.setEnabled(false);
        dateChooserDatNasc.setEnabled(false);
    }

    public void HabilitarCampos() {
        tfNome.setEnabled(true);
        tfBI.setEnabled(true);
        rbtnFeminino.setEnabled(true);
        rbtnMasculino.setEnabled(true);
        dateChooserDatNasc.setEnabled(true);
    }

    public void limparCampos() {
        tfNome.setText("");
        tfBI.setText("");
        tfMorada.setText("");
        tfContacto.setText("");
        textFieldEmail.setText("");
        dateChooserDatNasc.setDate(converterString(""));
        tbnGrupoGenero.clearSelection();
        cbDepartamento.setSelectedItem("Selecione o Departamento");
        cbCargos.setSelectedItem("Selecione o Cargo");
    }

    public FormFuncionario() {
        initComponents();
        painelCadastroUtilizadores.setFocusable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbnGrupoGenero = new javax.swing.ButtonGroup();
        painelCadastroUtilizadores = new javax.swing.JPanel();
        tfNome = new javax.swing.JTextField();
        jlNome = new javax.swing.JLabel();
        jpTitulo = new javax.swing.JPanel();
        jlTitulo = new javax.swing.JLabel();
        ButtonSearch = new javax.swing.JButton();
        jlCargo = new javax.swing.JLabel();
        cbCargos = new javax.swing.JComboBox();
        jlGenero = new javax.swing.JLabel();
        tfBI = new javax.swing.JTextField();
        jlMorada = new javax.swing.JLabel();
        rbtnMasculino = new javax.swing.JRadioButton();
        rbtnFeminino = new javax.swing.JRadioButton();
        jlDepartamento = new javax.swing.JLabel();
        cbDepartamento = new javax.swing.JComboBox();
        tfMorada = new javax.swing.JTextField();
        jlBI1 = new javax.swing.JLabel();
        jlContacto = new javax.swing.JLabel();
        tfContacto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        textFieldEmail = new javax.swing.JTextField();
        ButtomSalvar = new javax.swing.JButton();
        ButtonUpdate = new javax.swing.JButton();
        ButtonDelete = new javax.swing.JButton();
        ButtonList = new javax.swing.JButton();
        ButtonEnable = new javax.swing.JButton();
        ButtonUnable = new javax.swing.JButton();
        TabbedPaneFuncionario = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableFuncionario = new javax.swing.JTable();
        ButtonImprimir = new javax.swing.JButton();
        labelDataNasc = new javax.swing.JLabel();
        dateChooserDatNasc = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(940, 800));

        painelCadastroUtilizadores.setBackground(new java.awt.Color(255, 255, 255));
        painelCadastroUtilizadores.setMaximumSize(new java.awt.Dimension(1254, 798));
        painelCadastroUtilizadores.setName(""); // NOI18N
        painelCadastroUtilizadores.setPreferredSize(new java.awt.Dimension(940, 800));

        tfNome.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeActionPerformed(evt);
            }
        });

        jlNome.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        jlNome.setText("Nome");

        jpTitulo.setBackground(new java.awt.Color(129, 190, 234));

        jlTitulo.setFont(new java.awt.Font("Bookman Old Style", 3, 24)); // NOI18N
        jlTitulo.setText("Funcionario");

        ButtonSearch.setBackground(new java.awt.Color(255, 255, 255));
        ButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Search.png"))); // NOI18N
        ButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpTituloLayout = new javax.swing.GroupLayout(jpTitulo);
        jpTitulo.setLayout(jpTituloLayout);
        jpTituloLayout.setHorizontalGroup(
            jpTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        jpTituloLayout.setVerticalGroup(
            jpTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlTitulo)
                    .addComponent(ButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jlCargo.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        jlCargo.setText("Cargo");

        cbCargos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione o Cargo", "Secretario", "Cozinheiro", "Manobrista", "Zelador", "Outros" }));
        cbCargos.setNextFocusableComponent(this);
        cbCargos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCargosActionPerformed(evt);
            }
        });

        jlGenero.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        jlGenero.setText("Genero");

        tfBI.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfBI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBIActionPerformed(evt);
            }
        });

        jlMorada.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        jlMorada.setText("Morada");

        tbnGrupoGenero.add(rbtnMasculino);
        rbtnMasculino.setText("Masculino");
        rbtnMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMasculinoActionPerformed(evt);
            }
        });

        tbnGrupoGenero.add(rbtnFeminino);
        rbtnFeminino.setText("Feminino");
        rbtnFeminino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFemininoActionPerformed(evt);
            }
        });

        jlDepartamento.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        jlDepartamento.setText("Departamento");

        cbDepartamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione o Departamento", "Administracao", "Copa", "Seguranca", "Outros" }));
        cbDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDepartamentoActionPerformed(evt);
            }
        });

        tfMorada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfMorada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMoradaActionPerformed(evt);
            }
        });

        jlBI1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        jlBI1.setText("N. BI");

        jlContacto.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        jlContacto.setText("Contacto");

        tfContacto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfContactoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        jLabel1.setText("Email");

        textFieldEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldEmailActionPerformed(evt);
            }
        });

        ButtomSalvar.setBackground(new java.awt.Color(255, 255, 255));
        ButtomSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Add1.png"))); // NOI18N
        ButtomSalvar.setToolTipText("Adicionar");
        ButtomSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtomSalvarActionPerformed(evt);
            }
        });

        ButtonUpdate.setBackground(new java.awt.Color(255, 255, 255));
        ButtonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Update.png"))); // NOI18N
        ButtonUpdate.setToolTipText("Actualizar");
        ButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonUpdateActionPerformed(evt);
            }
        });

        ButtonDelete.setBackground(new java.awt.Color(255, 255, 255));
        ButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Delete.png"))); // NOI18N
        ButtonDelete.setToolTipText("Excluir");
        ButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteActionPerformed(evt);
            }
        });

        ButtonList.setBackground(new java.awt.Color(255, 255, 255));
        ButtonList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/List.png"))); // NOI18N
        ButtonList.setToolTipText("Listar");
        ButtonList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonListActionPerformed(evt);
            }
        });

        ButtonEnable.setBackground(new java.awt.Color(255, 255, 255));
        ButtonEnable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Enable.png"))); // NOI18N
        ButtonEnable.setToolTipText("Activar");
        ButtonEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEnableActionPerformed(evt);
            }
        });

        ButtonUnable.setBackground(new java.awt.Color(255, 255, 255));
        ButtonUnable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Unable.png"))); // NOI18N
        ButtonUnable.setToolTipText("Desativar");
        ButtonUnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonUnableActionPerformed(evt);
            }
        });

        TableFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "BI", "Nome", "Genero", "Data de nascimento", "Morada", "Contacto", "Email", "Departamento", "Cargo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableFuncionarioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableFuncionario);

        TabbedPaneFuncionario.addTab("Tabela de funcionarios", jScrollPane2);

        ButtonImprimir.setBackground(new java.awt.Color(255, 255, 255));
        ButtonImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Print.png"))); // NOI18N
        ButtonImprimir.setToolTipText("Listar");
        ButtonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonImprimirActionPerformed(evt);
            }
        });

        labelDataNasc.setFont(new java.awt.Font("Bookman Old Style", 3, 16)); // NOI18N
        labelDataNasc.setText("Data de nascimento");

        dateChooserDatNasc.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout painelCadastroUtilizadoresLayout = new javax.swing.GroupLayout(painelCadastroUtilizadores);
        painelCadastroUtilizadores.setLayout(painelCadastroUtilizadoresLayout);
        painelCadastroUtilizadoresLayout.setHorizontalGroup(
            painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelCadastroUtilizadoresLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TabbedPaneFuncionario)
                    .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(painelCadastroUtilizadoresLayout.createSequentialGroup()
                            .addComponent(ButtomSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(ButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(ButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(ButtonList, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(53, 53, 53)
                            .addComponent(ButtonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(ButtonEnable, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(ButtonUnable, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(painelCadastroUtilizadoresLayout.createSequentialGroup()
                                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfBI, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlBI1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(125, 125, 125)
                                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbDepartamento, javax.swing.GroupLayout.Alignment.TRAILING, 0, 346, Short.MAX_VALUE)
                                    .addComponent(jlDepartamento)))
                            .addComponent(tfNome)
                            .addComponent(jlNome, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelCadastroUtilizadoresLayout.createSequentialGroup()
                                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlGenero)
                                    .addGroup(painelCadastroUtilizadoresLayout.createSequentialGroup()
                                        .addComponent(rbtnMasculino, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbtnFeminino, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(251, 251, 251)
                                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbCargos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(painelCadastroUtilizadoresLayout.createSequentialGroup()
                                        .addComponent(jlCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastroUtilizadoresLayout.createSequentialGroup()
                                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlMorada)
                                    .addComponent(tfMorada, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelDataNasc))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(dateChooserDatNasc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );
        painelCadastroUtilizadoresLayout.setVerticalGroup(
            painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroUtilizadoresLayout.createSequentialGroup()
                .addComponent(jpTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelCadastroUtilizadoresLayout.createSequentialGroup()
                        .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlBI1)
                            .addComponent(jlDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfBI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnMasculino)
                            .addComponent(cbCargos, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbtnFeminino))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlMorada, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlContacto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfMorada, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateChooserDatNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastroUtilizadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ButtonUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtonList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtomSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ButtonEnable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonUnable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ButtonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(TabbedPaneFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCadastroUtilizadores, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCadastroUtilizadores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNomeActionPerformed

    private void tfBIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBIActionPerformed

    private void rbtnMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMasculinoActionPerformed
        genero = "Masculino";
    }//GEN-LAST:event_rbtnMasculinoActionPerformed

    private void rbtnFemininoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFemininoActionPerformed
        genero = "Feminino";
    }//GEN-LAST:event_rbtnFemininoActionPerformed

    private void cbDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDepartamentoActionPerformed
        if (cbDepartamento.getSelectedItem().equals("Selecione o Departamento")) {
            cbCargos.removeAllItems();
            cbCargos.addItem("Selecione o Cargo");
            cbCargos.addItem("Secretario");
            cbCargos.addItem("Cozinheiro");
            cbCargos.addItem("Zelador");
            cbCargos.addItem("Manobrista");
            cbCargos.addItem("Outros");
        } else if (cbDepartamento.getSelectedItem().equals("Administracao")) {
            cbCargos.removeAllItems();
            cbCargos.addItem("Secretario");
        } else if (cbDepartamento.getSelectedItem().equals("Copa")) {
            cbCargos.removeAllItems();
            cbCargos.addItem("Cozinheiro");
        } else if (cbDepartamento.getSelectedItem().equals("Seguranca")) {
            cbCargos.removeAllItems();
            cbCargos.addItem("Zelador");
            cbCargos.addItem("Manobrista");
        } else if (cbDepartamento.getSelectedItem().equals("Outros")) {
            cbCargos.removeAllItems();
            cbCargos.addItem("Outros");
        }
    }//GEN-LAST:event_cbDepartamentoActionPerformed

    private void tfMoradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMoradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMoradaActionPerformed

    private void cbCargosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCargosActionPerformed
//        if (cbCargos.getSelectedItem().equals("Selecione o Cargo")) {
//            cbDepartamento.removeAllItems();
//            cbDepartamento.addItem("Selecione o Departamento");
//            cbDepartamento.addItem("Administracao");
//            cbDepartamento.addItem("Copa");
//            cbDepartamento.addItem("Seguranca");
//            cbDepartamento.addItem("Outros");
//        } else if (cbCargos.getSelectedItem().equals("Secretario")) {
//            cbDepartamento.removeAllItems();
//            cbDepartamento.addItem("Administracao");
//        } else if (cbCargos.getSelectedItem().equals("Cozinheiro")) {
//            cbDepartamento.removeAllItems();
//            cbDepartamento.addItem("Copa");
//        } else if (cbCargos.getSelectedItem().equals("Zelador")) {
//            cbDepartamento.removeAllItems();
//            cbDepartamento.addItem("Seguranca");
//        } else if (cbCargos.getSelectedItem().equals("Outros")) {
//            cbDepartamento.removeAllItems();
//            cbDepartamento.addItem("Outros");
//        }
    }//GEN-LAST:event_cbCargosActionPerformed

    private void textFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldEmailActionPerformed

    private void ButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteActionPerformed
        HabilitarCampos();
        int opcao = (JOptionPane.showConfirmDialog(this, "Tem Certeza de que pretende Apagar o"
                + " Registo?", "Apagando Registo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE));
        if (opcao == 0) {
            func.setCodFuncionario(cod);
            func.setNomeCompleto(tfNome.getText());
            func.setNrBI(tfBI.getText());
            func.setSexo(genero);
            func.setMorada(tfMorada.getText());
            func.setDataNascimento(converterData(dateChooserDatNasc.getDate()));
            func.setDepartamento(cbDepartamento.getSelectedItem().toString());
            func.setCargo(cbCargos.getSelectedItem().toString());
            func.setContacto(tfContacto.getText());
            func.setEmail(textFieldEmail.getText());
            func.setEstado(estado);
            func.setStatus("False");
            dao.editar(func);
            tabela.limpaJtable(TableFuncionario);
            for (Funcionarios f : listarFuncionarios()) {
                if (f.getStatus().equalsIgnoreCase("True")) {
                    DefaultTableModel model = (DefaultTableModel) TableFuncionario.getModel();
                    model.addRow(new Object[]{f.getCodFuncionario(), f.getNrBI(), f.getNomeCompleto(), f.getSexo(), f.getDataNascimento(), f.getMorada(), f.getContacto(), f.getEmail(), f.getDepartamento(), f.getCargo(), f.getEstado()});
                }
            }
        }
        limparCampos();
    }//GEN-LAST:event_ButtonDeleteActionPerformed

    private void ButtonListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonListActionPerformed
        HabilitarCampos();
        tabela.limpaJtable(TableFuncionario);
        for (Funcionarios f : listarFuncionarios()) {
            if (f.getStatus().equalsIgnoreCase("True")) {
                DefaultTableModel model = (DefaultTableModel) TableFuncionario.getModel();
                model.addRow(new Object[]{f.getCodFuncionario(), f.getNrBI(), f.getNomeCompleto(), f.getSexo(), f.getDataNascimento(), f.getMorada(), f.getContacto(), f.getEmail(), f.getDepartamento(), f.getCargo(), f.getEstado()});
            }
        }
        limparCampos();
    }//GEN-LAST:event_ButtonListActionPerformed

    private void ButtonUnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonUnableActionPerformed
        HabilitarCampos();
        if (estado.equalsIgnoreCase("Inactivo")) {
            JOptionPane.showMessageDialog(null, "Este Funcionário Já se encontra Inactivo!");
        } else if (estado.equalsIgnoreCase("Activo")) {
            func.setCodFuncionario(cod);
            func.setNomeCompleto(tfNome.getText());
            func.setNrBI(tfBI.getText());
            func.setSexo(genero);
            func.setMorada(tfMorada.getText());
            func.setDataNascimento(converterData(dateChooserDatNasc.getDate()));
            func.setDepartamento(cbDepartamento.getSelectedItem().toString());
            func.setCargo(cbCargos.getSelectedItem().toString());
            func.setContacto(tfContacto.getText());
            func.setEmail(textFieldEmail.getText());
            func.setEstado("Inactivo");
            func.setStatus("True");
            dao.editar(func);
            tabela.limpaJtable(TableFuncionario);
            for (Funcionarios f : listarFuncionarios()) {
                if (f.getStatus().equalsIgnoreCase("True")) {
                    DefaultTableModel model = (DefaultTableModel) TableFuncionario.getModel();
                    model.addRow(new Object[]{f.getCodFuncionario(), f.getNrBI(), f.getNomeCompleto(), f.getSexo(), f.getDataNascimento(), f.getMorada(), f.getContacto(), f.getEmail(), f.getDepartamento(), f.getCargo(), f.getEstado()});
                }
            }
            JOptionPane.showMessageDialog(null, "Funcionário Desactivado com Sucesso!");

        }
        limparCampos();

    }//GEN-LAST:event_ButtonUnableActionPerformed

    private void tfContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfContactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfContactoActionPerformed

    private void ButtonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonImprimirActionPerformed
//        HabilitarCampos();
//        o.imprimir("G:\\UEM\\NÍVEL II\\SEMESTRE II\\POO\\Trabe_Semestral_POO\\relatorios\\RelatorioFuncionario.jasper");
//        limparCampos();
    }//GEN-LAST:event_ButtonImprimirActionPerformed

    private void ButtomSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtomSalvarActionPerformed
        HabilitarCampos();
        func.setNomeCompleto(tfNome.getText());
        func.setNrBI(tfBI.getText());
        func.setSexo(genero);
        func.setMorada(tfMorada.getText());
        func.setDataNascimento(converterData(dateChooserDatNasc.getDate()));
        func.setDepartamento(cbDepartamento.getSelectedItem().toString());
        func.setCargo(cbCargos.getSelectedItem().toString());
        func.setContacto(tfContacto.getText());
        func.setEmail(textFieldEmail.getText());
        func.setEstado("Activo");
        func.setStatus("True");
        dao.salvar(func);
        tabela.limpaJtable(TableFuncionario);
        for (Funcionarios f : listarFuncionarios()) {
            if (f.getStatus().equalsIgnoreCase("True")) {
                DefaultTableModel model = (DefaultTableModel) TableFuncionario.getModel();
                model.addRow(new Object[]{f.getCodFuncionario(), f.getNrBI(), f.getNomeCompleto(), f.getSexo(), f.getDataNascimento(), f.getMorada(), f.getContacto(), f.getEmail(), f.getDepartamento(), f.getCargo(), f.getEstado()});
            }
        }
        limparCampos();

    }//GEN-LAST:event_ButtomSalvarActionPerformed

    private void TableFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableFuncionarioMouseClicked
        tbnGrupoGenero.clearSelection();
        tfBI.setText((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 1));
        tfNome.setText((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 2));
        String sexo = ((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 3));
        if (sexo.equalsIgnoreCase("Feminino")) {
            rbtnFeminino.setSelected(true);
            genero = "Feminino";
        } else if (sexo.equalsIgnoreCase("Masculino")) {
            rbtnMasculino.setSelected(true);
            genero = "Masculino";
        }
        estado = ((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 10));
        tfMorada.setText((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 5));
        dateChooserDatNasc.setDate(converterString((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 4)));
        textFieldEmail.setText((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 7));
        tfContacto.setText((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 6));
        cbDepartamento.setSelectedItem((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 8));
        cbCargos.setSelectedItem((String) TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 9));
        cod = Integer.parseInt(String.valueOf(TableFuncionario.getValueAt(TableFuncionario.getSelectedRow(), 0)));
        desabilitarCampos();
    }//GEN-LAST:event_TableFuncionarioMouseClicked

    private void ButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonUpdateActionPerformed
        HabilitarCampos();
        func.setCodFuncionario(cod);
        func.setNomeCompleto(tfNome.getText());
        func.setNrBI(tfBI.getText());
        func.setSexo(genero);
        func.setMorada(tfMorada.getText());
        func.setDataNascimento(converterData(dateChooserDatNasc.getDate()));
        func.setDepartamento(cbDepartamento.getSelectedItem().toString());
        func.setCargo(cbCargos.getSelectedItem().toString());
        func.setContacto(tfContacto.getText());
        func.setEmail(textFieldEmail.getText());
        func.setEstado(estado);
        func.setStatus("True");
        dao.editar(func);
        tabela.limpaJtable(TableFuncionario);
        for (Funcionarios f : listarFuncionarios()) {
            if (f.getStatus().equalsIgnoreCase("True")) {
                DefaultTableModel model = (DefaultTableModel) TableFuncionario.getModel();
                model.addRow(new Object[]{f.getCodFuncionario(), f.getNrBI(), f.getNomeCompleto(), f.getSexo(), f.getDataNascimento(), f.getMorada(), f.getContacto(), f.getEmail(), f.getDepartamento(), f.getCargo(), f.getEstado()});
            }
        }
        limparCampos();
    }//GEN-LAST:event_ButtonUpdateActionPerformed

    private void ButtonEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEnableActionPerformed
        HabilitarCampos();
        if (estado.equalsIgnoreCase("Activo")) {
            JOptionPane.showMessageDialog(null, "Este Funcionário Já se encontra activo!");
        } else if (estado.equalsIgnoreCase("Inactivo")) {
            func.setCodFuncionario(cod);
            func.setNomeCompleto(tfNome.getText());
            func.setNrBI(tfBI.getText());
            func.setSexo(genero);
            func.setMorada(tfMorada.getText());
            func.setDataNascimento(converterData(dateChooserDatNasc.getDate()));
            func.setDepartamento(cbDepartamento.getSelectedItem().toString());
            func.setCargo(cbCargos.getSelectedItem().toString());
            func.setContacto(tfContacto.getText());
            func.setEmail(textFieldEmail.getText());
            func.setEstado("Activo");
            func.setStatus("True");
            dao.editar(func);
            tabela.limpaJtable(TableFuncionario);
            for (Funcionarios f : listarFuncionarios()) {
                if (f.getStatus().equalsIgnoreCase("True")) {
                    DefaultTableModel model = (DefaultTableModel) TableFuncionario.getModel();
                    model.addRow(new Object[]{f.getCodFuncionario(), f.getNrBI(), f.getNomeCompleto(), f.getSexo(), f.getDataNascimento(), f.getMorada(), f.getContacto(), f.getEmail(), f.getDepartamento(), f.getCargo(), f.getEstado()});
                }
            }
            JOptionPane.showMessageDialog(null, "Funcionário Activado com Sucesso!");

        }
        limparCampos();
    }//GEN-LAST:event_ButtonEnableActionPerformed

    private void ButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSearchActionPerformed
        tabela.limpaJtable(TableFuncionario);
        for (Funcionarios f : pesquisarFuncionarios(tfNome.getText())) {
            if (f.getStatus().equalsIgnoreCase("True")) {
                DefaultTableModel model = (DefaultTableModel) TableFuncionario.getModel();
                model.addRow(new Object[]{f.getCodFuncionario(), f.getNrBI(), f.getNomeCompleto(), f.getSexo(), f.getDataNascimento(), f.getMorada(), f.getContacto(), f.getEmail(), f.getDepartamento(), f.getCargo(), f.getEstado()});
            }
        }
        limparCampos();
    }//GEN-LAST:event_ButtonSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtomSalvar;
    private javax.swing.JButton ButtonDelete;
    private javax.swing.JButton ButtonEnable;
    private javax.swing.JButton ButtonImprimir;
    private javax.swing.JButton ButtonList;
    private javax.swing.JButton ButtonSearch;
    private javax.swing.JButton ButtonUnable;
    private javax.swing.JButton ButtonUpdate;
    private javax.swing.JTabbedPane TabbedPaneFuncionario;
    private javax.swing.JTable TableFuncionario;
    private javax.swing.JComboBox cbCargos;
    private javax.swing.JComboBox cbDepartamento;
    private com.toedter.calendar.JDateChooser dateChooserDatNasc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlBI1;
    private javax.swing.JLabel jlCargo;
    private javax.swing.JLabel jlContacto;
    private javax.swing.JLabel jlDepartamento;
    private javax.swing.JLabel jlGenero;
    private javax.swing.JLabel jlMorada;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlTitulo;
    private javax.swing.JPanel jpTitulo;
    private javax.swing.JLabel labelDataNasc;
    private javax.swing.JPanel painelCadastroUtilizadores;
    private javax.swing.JRadioButton rbtnFeminino;
    private javax.swing.JRadioButton rbtnMasculino;
    private javax.swing.ButtonGroup tbnGrupoGenero;
    private javax.swing.JTextField textFieldEmail;
    private javax.swing.JTextField tfBI;
    private javax.swing.JTextField tfContacto;
    private javax.swing.JTextField tfMorada;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables
}
